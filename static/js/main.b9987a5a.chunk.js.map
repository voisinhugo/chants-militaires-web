{"version":3,"sources":["theme/index.js","navigation/utils.ts","pages/MusicList/components/MusicItem.tsx","data/index.ts","components/Header/Header.tsx","components/Icons/LeftArrow.tsx","components/ScrollToTop/ScrollToTop.tsx","pages/MusicList/MusicList.tsx","pages/MusicView/MusicView.tsx","App.tsx","serviceWorker.js","index.js"],"names":["color","background","header","white","margin","x1","x2","BASE_SPACING","fontSize","title","heading","body","PATHS","getPath","path","Container","styled","div","theme","MusicText","p","MusicItem","song","history","useHistory","onClick","songId","id","push","songs","reduce","res","item","HeaderContainer","HeaderTitle","h1","BackArrow","props","size","viewBox","height","width","fill","d","attrs","Header","hasGoBack","goBack","ScrollToTop","useEffect","unlisten","listen","window","scrollTo","sortedSongs","Object","values","sort","a","b","ListContainer","MusicList","map","key","toString","Lyrics","MusicView","useParams","undefined","lyrics","App","exact","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"g1mFAEe,GACbA,MAAO,CACLC,WAAY,UACZC,OAAQ,UACRC,MAAO,WAETC,OAAQ,CACNC,GATiB,EAUjBC,GAAIC,IAENC,SAAU,CACRC,MAAO,GACPC,QAAS,GACTC,KAAM,KCbGC,EACL,QAGKC,EAAU,eAACC,EAAD,uDAAgB,GAAhB,gBANL,0BAMK,OAAsCA,I,iVCK7D,IAAMC,EAAYC,IAAOC,IAAV,IACOC,EAAMlB,MAAMC,YAG5BkB,EAAYH,IAAOI,EAAV,IACEF,EAAMd,OAAOE,GAGLY,EAAMd,OAAOC,GACfa,EAAMd,OAAOC,GACzBa,EAAMlB,MAAMG,MACRe,EAAMV,SAASE,SAGjBW,EAAsC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC9CC,EAAUC,cAQhB,OACE,kBAACT,EAAD,CAAWU,QAPO,WAClB,IAAMC,EAASJ,EAAKK,GACdb,EAAI,UAAMF,EAAN,YAAoBc,GAC9BH,EAAQK,KAAR,UAAgBf,EAAQC,OAKtB,kBAACK,EAAD,KAAYG,EAAKb,SCmHRoB,EA5ED,C,ubA4EOC,QAAO,SAACC,EAAKC,GAEhC,OADAD,EAAIC,EAAKL,IAAMK,EACRD,IACN,I,ogBC/IH,IAAME,EAAkBjB,IAAOC,IAAV,IAICC,EAAMlB,MAAME,OAChBgB,EAAMd,OAAOC,IAGzB6B,EAAclB,IAAOmB,GAAV,IACNjB,EAAMlB,MAAMG,MACRe,EAAMV,SAASC,MAGLS,EAAMd,OAAOE,GACfY,EAAMd,OAAOE,GACnBY,EAAMd,OAAOC,IAGxB+B,EAAYpB,aCtBiC,SAAAqB,GAAU,IACnDC,EAAgBD,EAAhBC,KAAMtC,EAAUqC,EAAVrC,MAEd,OACE,yBAAKuC,QAAQ,cAAcC,OAAQF,EAAMG,MAAOH,GAC9C,0BACEI,KAAM1C,EACN2C,EAAE,ojBDe0BC,MAAM,CACxCN,KAAMpB,EAAMV,SAASC,MACrBT,MAAOkB,EAAMlB,MAAMG,OAFHa,CAAH,IAIHE,EAAMd,OAAOC,IAGZwC,EAAmC,SAAC,GAA0B,IAAxBpC,EAAuB,EAAvBA,MAAOqC,EAAgB,EAAhBA,UAClDvB,EAAUC,cAEhB,OACE,kBAACS,EAAD,KACGa,GACC,yBAAKrB,QAAS,kBAAMF,EAAQwB,WAC1B,kBAACX,EAAD,OAGJ,kBAACF,EAAD,KAAczB,KE3CPuC,EAAiC,WAC5C,IAAMzB,EAAUC,cAWhB,OATAyB,qBAAU,WACR,IAAMC,EAAW3B,EAAQ4B,QAAO,WAC9BC,OAAOC,SAAS,EAAG,MAErB,OAAO,WACLH,OAED,CAAC3B,IAEG,M,kJCPT,IAAM+B,EAAcC,OAAOC,OAAO3B,GAAO4B,MAAK,SAACC,EAASC,GAAV,OAC5CD,EAAEjD,MAAQkD,EAAElD,MAAQ,GAAK,KAGrBmD,EAAgB5C,IAAOC,IAAV,IACGC,EAAMlB,MAAMC,WACjBiB,EAAMd,OAAOC,GACVa,EAAMd,OAAOC,IAGpBwD,EAA+B,WAC1C,OACE,oCACE,kBAAC,EAAD,CAAQpD,MAAM,qBACd,kBAACmD,EAAD,KACGN,EAAYQ,KAAI,SAAC9B,GAAD,OACf,kBAAC,EAAD,CAAW+B,IAAK/B,EAAKL,GAAGqC,WAAY1C,KAAMU,U,0YCjBpD,IAAMjB,EAAYC,IAAOC,IAAV,IACOC,EAAMlB,MAAMC,YAK5BgE,EAASjD,IAAOI,EAAV,IACCF,EAAMd,OAAOE,GACXY,EAAMV,SAASG,KACnBO,EAAMlB,MAAMG,MAGEe,EAAMd,OAAOE,GACfY,EAAMd,OAAOE,IAIvB4D,EAA+B,WAAO,IACzCxC,EAAWyC,cAAXzC,OAER,YAAkB0C,IAAX1C,EACL,oCACE,kBAAC,EAAD,CAAQjB,MAAOoB,EAAMH,GAAQjB,MAAOqC,WAAS,IAC7C,kBAAC,EAAD,KACE,kBAACmB,EAAD,KAASpC,EAAMH,GAAQ2C,UAGzB,MCdSC,EAdH,kBACV,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACzD,KAAMD,IAAW2D,UAAWX,IACzC,kBAAC,IAAD,CACEU,OAAK,EACLzD,KAAMD,EAAQ,GAAD,OAAID,EAAJ,aACb4D,UAAWN,OCFCO,QACW,cAA7BrB,OAAOsB,SAASC,UAEe,UAA7BvB,OAAOsB,SAASC,UAEhBvB,OAAOsB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,mB","file":"static/js/main.b9987a5a.chunk.js","sourcesContent":["const BASE_SPACING = 8;\n\nexport default {\n  color: {\n    background: '#272727',\n    header: '#333333',\n    white: '#FFFFFF',\n  },\n  margin: {\n    x1: BASE_SPACING,\n    x2: BASE_SPACING * 2,\n  },\n  fontSize: {\n    title: 24,\n    heading: 20,\n    body: 16,\n  },\n};\n","const BASE_PATH = \"/chants-militaires-web\";\n\nexport const PATHS = {\n  song: \"/song\"\n};\n\nexport const getPath = (path: string = \"\") => `${BASE_PATH}${path}`;\n","import React, { FunctionComponent } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport theme from \"../../../theme\";\nimport { getPath, PATHS } from \"../../../navigation/utils\";\nimport { Song } from \"../../../react-app-env\";\n\ninterface Props {\n  song: Song;\n}\n\nconst Container = styled.div`\n  background-color: ${theme.color.background};\n`;\n\nconst MusicText = styled.p`\n  margin-left: ${theme.margin.x2}px;\n  margin-block-start: 0;\n  margin-block-end: 0;\n  padding-block-start: ${theme.margin.x1}px;\n  padding-block-end: ${theme.margin.x1}px;\n  color: ${theme.color.white};\n  font-size: ${theme.fontSize.heading}px;\n`;\n\nexport const MusicItem: FunctionComponent<Props> = ({ song }) => {\n  const history = useHistory();\n\n  const onItemPress = () => {\n    const songId = song.id;\n    const path = `${PATHS.song}/${songId}`;\n    history.push(`${getPath(path)}`);\n  };\n\n  return (\n    <Container onClick={onItemPress}>\n      <MusicText>{song.title}</MusicText>\n    </Container>\n  );\n};\n","import Charlotte from \"./Charlotte.json\";\nimport LeGarsPopol from \"./LeGarsPopol.json\";\nimport LesBiffins from \"./LesBiffins.json\";\nimport ChevaliersDeLaTableRonde from \"./ChevaliersDeLaTableRonde.json\";\nimport LeVinGaulois from \"./LeVinGaulois.json\";\nimport LePékinDeBahut from \"./LePékinDeBahut.json\";\nimport LesFines from \"./LesFines.json\";\nimport CommandosDAfrique from \"./CommandosDAfrique.json\";\nimport LesDragonsDeNoailles from \"./LesDragonsDeNoailles.json\";\nimport LaMontagne from \"./LaMontagne.json\";\nimport QuandJésusChristCréaLaColoniale from \"./QuandJésusChristCréaLaColoniale.json\";\nimport Opium from \"./Opium.json\";\nimport JAvaisUnCamarade from \"./JAvaisUnCamarade.json\";\nimport LaPetitePiste from \"./LaPetitePiste.json\";\nimport LEdelweiss from \"./LEdelweiss.json\";\nimport LeBoudin from \"./LeBoudin.json\";\nimport LeClairon from \"./LeClairon.json\";\nimport LesAfricains from \"./LesAfricains.json\";\nimport LaPiémontaise from \"./LaPiémontaise.json\";\nimport LaBlancheHermine from \"./LaBlancheHermine.json\";\nimport LaMort from \"./LaMort.json\";\nimport LeChantDesMarais from \"./LeChantDesMarais.json\";\nimport LeChantDesPartisans from \"./LeChantDesPartisans.json\";\nimport LeGarsPierre from \"./LeGarsPierre.json\";\nimport LeVolontaire from \"./LeVolontaire.json\";\nimport LesCosaques from \"./LesCosaques.json\";\nimport LesPartisansBlancs from \"./LesPartisansBlancs.json\";\nimport ÔFrederi from \"./ÔFrederi.json\";\nimport PelotDHennebont from \"./PelotDHennebont.json\";\nimport PourLaFranceEnDanger from \"./PourLaFranceEnDanger.json\";\nimport LeJourLePlusLong from \"./LeJourLePlusLong.json\";\nimport LAncien from \"./LAncien.json\";\nimport LesLansquenets from \"./LesLansquenets.json\";\nimport ÔDouceFrance from \"./ÔDouceFrance.json\";\nimport MaFrance from \"./MaFrance.json\";\nimport VeillonsAuSalutDeLEmpire from \"./VeillonsAuSalutDeLEmpire.json\";\nimport ChansonDeLOignon from \"./ChansonDeLOignon.json\";\nimport LesLanciersPolonais from \"./LesLanciersPolonais.json\";\nimport FanfanLaTulipe from \"./FanfanLaTulipe.json\";\nimport LaMarseillaise from \"./LaMarseillaise.json\";\nimport LeChantDuDépart from \"./LeChantDuDépart.json\";\nimport ChantDesGirondins from \"./ChantDesGirondins.json\";\nimport SambreEtMeuse from \"./SambreEtMeuse.json\";\nimport AlsaceLorraine from \"./AlsaceLorraine.json\";\nimport LaMadelonDeLaVictoire from \"./LaMadelonDeLaVictoire.json\";\nimport LeRêvePasse from \"./LeRêvePasse.json\";\nimport LesÉpisMûrs from \"./LesÉpisMûrs.json\";\nimport MarcheLorraine from \"./MarcheLorraine.json\";\nimport LePinard from \"./LePinard.json\";\nimport LaMadelon from \"./LaMadelon.json\";\nimport LaStrasbourgeoise from \"./LaStrasbourgeoise.json\";\nimport Verdun from \"./Verdun.json\";\nimport EnPassantParLaPortière from \"./EnPassantParLaPortière.json\";\nimport LeCombatDeDemain from \"./LeCombatDeDemain.json\";\nimport LaCavalcade from \"./LaCavalcade.json\";\nimport DeboutLesParas from \"./DeboutLesParas.json\";\nimport AdieuDuBataillonDeChoc from \"./AdieuDuBataillonDeChoc.json\";\nimport LesHussardsDeBercheny from \"./LesHussardsDeBercheny.json\";\nimport GloryGloryAlléluia from \"./GloryGloryAlléluia.json\";\nimport LesCommandos from \"./LesCommandos.json\";\nimport Le_31DuMoisDAoût from \"./Le_31DuMoisDAoût.json\";\nimport SariMarès from \"./SariMarès.json\";\nimport LaPrière from \"./LaPrière.json\";\nimport GénéralLoustaunauLacau from \"./GénéralLoustaunauLacau.json\";\nimport GénéralFourcade from \"./GénéralFourcade.json\";\nimport CompagnonsDeLaLibération from \"./CompagnonsDeLaLibération.json\";\nimport LesOfficiers from \"./LesOfficiers.json\";\nimport LaGalette from \"./LaGalette.json\";\nimport LesCasos from \"./LesCasos.json\";\nimport NouveauBahut from \"./NouveauBahut.json\";\nimport KyrieDesGueux from \"./KyrieDesGueux.json\";\nimport BéretRouge from \"./BéretRouge.json\";\nimport LesOiesSauvages from \"./LesOiesSauvages.json\";\nimport { Song } from \"../react-app-env.js\";\n\nconst songs = [\n  Charlotte,\n  LeGarsPopol,\n  LesBiffins,\n  ChevaliersDeLaTableRonde,\n  LeVinGaulois,\n  LePékinDeBahut,\n  LesFines,\n  CommandosDAfrique,\n  LesDragonsDeNoailles,\n  LaMontagne,\n  QuandJésusChristCréaLaColoniale,\n  Opium,\n  JAvaisUnCamarade,\n  LaPetitePiste,\n  LEdelweiss,\n  LeBoudin,\n  LeClairon,\n  LesAfricains,\n  LaPiémontaise,\n  LaBlancheHermine,\n  LaMort,\n  LeChantDesMarais,\n  LeChantDesPartisans,\n  LeGarsPierre,\n  LeVolontaire,\n  LesCosaques,\n  LesPartisansBlancs,\n  ÔFrederi,\n  PelotDHennebont,\n  PourLaFranceEnDanger,\n  LeJourLePlusLong,\n  LAncien,\n  LesLansquenets,\n  ÔDouceFrance,\n  MaFrance,\n  VeillonsAuSalutDeLEmpire,\n  ChansonDeLOignon,\n  LesLanciersPolonais,\n  FanfanLaTulipe,\n  LaMarseillaise,\n  LeChantDuDépart,\n  ChantDesGirondins,\n  SambreEtMeuse,\n  AlsaceLorraine,\n  LaMadelonDeLaVictoire,\n  LeRêvePasse,\n  LesÉpisMûrs,\n  MarcheLorraine,\n  LePinard,\n  LaMadelon,\n  LaStrasbourgeoise,\n  Verdun,\n  EnPassantParLaPortière,\n  LeCombatDeDemain,\n  LaCavalcade,\n  DeboutLesParas,\n  AdieuDuBataillonDeChoc,\n  LesHussardsDeBercheny,\n  GloryGloryAlléluia,\n  LesCommandos,\n  Le_31DuMoisDAoût,\n  SariMarès,\n  LaPrière,\n  GénéralLoustaunauLacau,\n  GénéralFourcade,\n  CompagnonsDeLaLibération,\n  LesOfficiers,\n  LaGalette,\n  LesCasos,\n  NouveauBahut,\n  KyrieDesGueux,\n  BéretRouge,\n  LesOiesSauvages\n] as Song[];\n\nexport default songs.reduce((res, item) => {\n  res[item.id] = item;\n  return res;\n}, {} as Record<string, Song>);\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport theme from \"../../theme\";\nimport { LeftArrow } from \"../Icons\";\nimport { useHistory } from \"react-router\";\n\ninterface Props {\n  title: string;\n  hasGoBack?: boolean;\n}\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  background-color: ${theme.color.header};\n  padding-left: ${theme.margin.x1}px;\n`;\n\nconst HeaderTitle = styled.h1`\n  color: ${theme.color.white};\n  font-size: ${theme.fontSize.title}px;\n  margin-block-start: 0;\n  margin-block-end: 0;\n  padding-block-start: ${theme.margin.x2}px;\n  padding-block-end: ${theme.margin.x2}px;\n  margin-left: ${theme.margin.x1}px;\n`;\n\nconst BackArrow = styled(LeftArrow).attrs({\n  size: theme.fontSize.title,\n  color: theme.color.white\n})`\n  margin: ${theme.margin.x1}px;\n`;\n\nexport const Header: FunctionComponent<Props> = ({ title, hasGoBack }) => {\n  const history = useHistory();\n\n  return (\n    <HeaderContainer>\n      {hasGoBack && (\n        <div onClick={() => history.goBack()}>\n          <BackArrow />\n        </div>\n      )}\n      <HeaderTitle>{title}</HeaderTitle>\n    </HeaderContainer>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\n\ninterface Props {\n  color: string;\n  size: number;\n}\n\nexport const LeftArrow: FunctionComponent<Props> = props => {\n  const { size, color } = props;\n\n  return (\n    <svg viewBox=\"0 0 492 492\" height={size} width={size}>\n      <path\n        fill={color}\n        d=\"M464.344 207.418l.768.168H135.888l103.496-103.724c5.068-5.064 7.848-11.924 7.848-19.124 0-7.2-2.78-14.012-7.848-19.088L223.28 49.538c-5.064-5.064-11.812-7.864-19.008-7.864-7.2 0-13.952 2.78-19.016 7.844L7.844 226.914C2.76 231.998-.02 238.77 0 245.974c-.02 7.244 2.76 14.02 7.844 19.096l177.412 177.412c5.064 5.06 11.812 7.844 19.016 7.844 7.196 0 13.944-2.788 19.008-7.844l16.104-16.112c5.068-5.056 7.848-11.808 7.848-19.008 0-7.196-2.78-13.592-7.848-18.652L134.72 284.406h329.992c14.828 0 27.288-12.78 27.288-27.6v-22.788c0-14.82-12.828-26.6-27.656-26.6z\"\n      />\n    </svg>\n  );\n};\n","import { useEffect, FunctionComponent } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const ScrollToTop: FunctionComponent = () => {\n  const history = useHistory();\n\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    };\n  }, [history]);\n\n  return null;\n};\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { MusicItem } from \"./components\";\nimport songs from \"../../data\";\nimport theme from \"../../theme\";\nimport { Header } from \"../../components\";\nimport { Song } from \"../../react-app-env\";\n\nconst sortedSongs = Object.values(songs).sort((a: Song, b: Song) =>\n  a.title > b.title ? 1 : -1\n);\n\nconst ListContainer = styled.div`\n  background-color: ${theme.color.background};\n  padding-top: ${theme.margin.x1}px;\n  padding-bottom: ${theme.margin.x1}px;\n`;\n\nexport const MusicList: FunctionComponent = () => {\n  return (\n    <>\n      <Header title=\"Liste des chants\" />\n      <ListContainer>\n        {sortedSongs.map((item: Song) => (\n          <MusicItem key={item.id.toString()} song={item} />\n        ))}\n      </ListContainer>\n    </>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport songs from \"../../data\";\nimport theme from \"../../theme\";\nimport { Header } from \"../../components\";\n\nconst Container = styled.div`\n  background-color: ${theme.color.background};\n  display: flex;\n  flex-grow: 1;\n`;\n\nconst Lyrics = styled.p`\n  padding: ${theme.margin.x2}px;\n  font-size: ${theme.fontSize.body}px;\n  color: ${theme.color.white};\n  margin-block-start: 0;\n  margin-block-end: 0;\n  padding-block-start: ${theme.margin.x2}px;\n  padding-block-end: ${theme.margin.x2}px;\n  white-space: pre-wrap;\n`;\n\nexport const MusicView: FunctionComponent = () => {\n  const { songId } = useParams();\n\n  return songId !== undefined ? (\n    <>\n      <Header title={songs[songId].title} hasGoBack />\n      <Container>\n        <Lyrics>{songs[songId].lyrics}</Lyrics>\n      </Container>\n    </>\n  ) : null;\n};\n","import React from \"react\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { MusicList, MusicView } from \"./pages\";\nimport { getPath, PATHS } from \"./navigation/utils\";\nimport { ScrollToTop } from \"./components\";\n\nconst App = () => (\n  <Router>\n    <ScrollToTop />\n    <Switch>\n      <Route exact path={getPath()} component={MusicList} />\n      <Route\n        exact\n        path={getPath(`${PATHS.song}/:songId`)}\n        component={MusicView}\n      />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}